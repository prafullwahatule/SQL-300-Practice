-- C. SUBQUERIES (Q46â€“Q65)

-- Q46. Find the most expensive pizza (using subquery).
SELECT * FROM pizzas 
WHERE price = (
	SELECT MAX(price) FROM pizzas);

-- Q47. Show customers who placed orders above avg total_amount.
SELECT c.customer_id, o.total_amount
FROM customers c
JOIN orders o
ON o.customer_id = c.customer_id
WHERE total_amount > (SELECT AVG(total_amount) FROM orders);

-- Q48. Find pizzas priced higher than avg pizza price.
SELECT * FROM pizzas
WHERE price > (
SELECT AVG(price) FROM pizzas);

-- Q49. Show orders with amount greater than avg order amount.
SELECT * FROM orders
WHERE total_amount >
(SELECT AVG(total_amount) FROM orders);

-- Q50. List customers who spent more than avg customer spending.
SELECT c.customer_id, c.first_name, c.last_name,
       SUM(p.price * oi.quantity) AS Spending
FROM customers c
JOIN orders o
  ON o.customer_id = c.customer_id
JOIN order_items oi
  ON oi.order_id = o.order_id
JOIN pizzas p
  ON p.pizza_id = oi.pizza_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING SUM(p.price * oi.quantity) > (
    SELECT AVG(customer_total)
    FROM (
        SELECT SUM(p2.price * oi2.quantity) AS customer_total
        FROM customers c2
        JOIN orders o2
          ON o2.customer_id = c2.customer_id
        JOIN order_items oi2
          ON oi2.order_id = o2.order_id
        JOIN pizzas p2
          ON p2.pizza_id = oi2.pizza_id
        GROUP BY c2.customer_id
    ) sub
);
        
-- Q51. Show customers who ordered the cheapest pizza.
SELECT c.customer_id, c.first_name, c.last_name, p.pizza_name
FROM orders o
JOIN order_items oi
ON oi.order_id = o.order_id
JOIN pizzas p
ON p.pizza_id = oi.pizza_id
JOIN customers c
ON c.customer_id = o.customer_id
WHERE price = (
SELECT MIN(price) FROM pizzas
);

-- Q52. Find orders containing highest priced pizza.
SELECT MAX(price) FROM pizzas;
SELECT o.order_id, p.pizza_id,p.pizza_name,p.category,p.price
FROM orders o
JOIN order_items oi
ON oi.order_id = o.order_id
JOIN pizzas p
ON p.pizza_id = oi.pizza_id
WHERE p.price = (
SELECT MAX(price) FROM pizzas);

-- Q53. Show pizzas ordered more than avg quantity.
SELECT p.pizza_name, SUM(oi.quantity) AS total_quantity
SELECT p.pizza_name, SUM(oi.quantity) AS total_quantity
FROM pizzas p
JOIN order_items oi ON oi.pizza_id = p.pizza_id
GROUP BY p.pizza_name
HAVING SUM(oi.quantity) > (SELECT AVG(total_qty)
                           FROM (SELECT SUM(quantity) AS total_qty
                                 FROM order_items
                                 GROUP BY pizza_id) sub);
                                 
-- Q54. Get customer with highest total spending.
SELECT c.customer_id, c.first_name, c.last_name, SUM(o.total_amount) AS total_spent
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING SUM(o.total_amount) = (
    SELECT MAX(total_spent) 
    FROM (
        SELECT SUM(total_amount) AS total_spent
        FROM orders
        GROUP BY customer_id
    ) AS t
);      

-- Q55. Find order with max number of pizzas.
SELECT oi.order_id, SUM(oi.quantity) AS total_order
FROM order_items oi
GROUP BY oi.order_id
HAVING SUM(oi.quantity) = (
	SELECT MAX(total_pizza)
    FROM(
		SELECT oi.order_id, SUM(oi.quantity) AS total_pizza
        FROM order_items oi
        GROUP BY oi.order_id
	) AS total_order
);

-- Q56. Show customers whose order count > avg order count.
SELECT customer_id, COUNT(order_id) AS order_count
FROM orders
GROUP BY customer_id
HAVING COUNT(order_id) > (
    SELECT AVG(customer_order_count)
    FROM (
        SELECT COUNT(order_id) AS customer_order_count
        FROM orders
        GROUP BY customer_id
    ) AS temp
);

-- Q57. Show customers who ordered pizza not ordered by others.

-- Q58. Find customers who ordered all Veg pizzas.

-- Q59. Show pizzas ordered in orders with total > 900.

-- Q60. List pizzas not ordered in June.

-- Q61. Find cities with avg order > total avg order.

-- Q62. Show top 2 pizzas by revenue using subquery.

-- Q63. Find pizza ordered by customer with max total spend.

-- Q64. Show customers who never ordered a Non-Veg pizza.

-- Q65. Show pizzas ordered in orders with more than 2 items.
